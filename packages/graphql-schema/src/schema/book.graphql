type Book {
    id: ID!
    title: String!
    description: String!
    publishedDate: DateTime!
    author: Author!
    coverUrl: String
    createdAt: DateTime! 
    updatedAt: DateTime! 
}

type Author {
  id: ID!
  name: String!
  biography: String!
  bornDate: DateTime!
  books: [Book!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input CreateBookInput {
  title: String!
  description: String!
  publishedDate: DateTime!
  authorId: ID!
  coverUrl: String
}

input UpdateBookInput {
  title: String
  description: String
  publishedDate: DateTime
  authorId: ID
  coverUrl: String
}

type Query {
  books(page: Int!, limit: Int!): [Book!]!
  book(id: ID!): Book
  booksByAuthor(authorId: ID!): [Book!]!
}

type Mutation {
  createBook(input: CreateBookInput!): Book!
  updateBook(id: ID!, input: UpdateBookInput!): Book!
  deleteBook(id: ID!): Boolean!
}

scalar DateTime
scalar Upload